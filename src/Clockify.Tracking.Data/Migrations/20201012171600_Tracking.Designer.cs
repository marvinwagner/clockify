// <auto-generated />
using System;
using Clockify.Tracking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clockify.Tracking.Data.Migrations
{
    [DbContext(typeof(TrackingContext))]
    [Migration("20201012171600_Tracking")]
    partial class Tracking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clockify.Tracking.Domain.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("LunchTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ToleranceTime")
                        .HasColumnType("time");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("WorkingTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("Clockify.Tracking.Domain.Models.DayEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ExtraTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("MissingTime")
                        .HasColumnType("time");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DayEntries");
                });

            modelBuilder.Entity("Clockify.Tracking.Domain.Models.TimeEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("Clockify.Tracking.Domain.Models.TimeEntry", b =>
                {
                    b.HasOne("Clockify.Tracking.Domain.Models.DayEntry", "Day")
                        .WithMany("Points")
                        .HasForeignKey("DayId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
